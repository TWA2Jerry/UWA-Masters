const no_birds::Int32 = 5
initialised::Int32 = 0
area_zero = zeros(Int32, 100)
const rect_bound::Float64 = 800.0
const spawn_dim_x::Float64 = 100.0 #This gives the x dimesnion size of the initial spawning area for the agents
const spawn_dim_y::Float64 = 100.0 #This gives the y dimension size of the initial spawning area for the agents
const rho::Float64 = 100.0
moves_areas::Vector{Tuple{Int64, Float64, Float64}} = [] #This is an array which will allow us to record all the areas and directions considered for each step, for each agent
no_move = ones(Int32, no_birds) #An array which will allow us to keep track of which agents never move
new_pos::Vector{Tuple{Float64, Float64}} = [(0.0, 0.0) for i in 1:no_birds] #An array that will store the new positions of the agents for movement when we go to the model step
new_vel::Vector{Tuple{Float64, Float64}} = Vector{Tuple{Float64, Float64}}(undef, no_birds)
convex_hull_point = zeros(Int32, 100)
last_half_planes::Vector{Tuple{Float64, Tuple{Float64, Float64}, Tuple{Float64, Float64}, Int64}} = [(0.0, (0.0, 0.0), (0.0, 0.0), 0) for i in 1:no_birds]
const sigma = 0.0
const R::Float64 = 80.0
best_pos::Vector{Tuple{Float64, Float64}} = Vector{Tuple{Float64, Float64}}(undef, no_birds)
eta::Float64 = 1.0
const lower_area::Float64 = 0.0
const upper_area::Float64 = 500.0
bin_range::Tuple{Float64, Float64} = (0.19, 0.2)
